"""empty message

Revision ID: e520802f5eb2
Revises: 000000000000
Create Date: 2019-12-06 11:33:22.138911

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e520802f5eb2'
down_revision = '000000000000'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access_groups',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('permission', sa.Enum('READ', 'WRITE', 'DELETE', name='permissiontypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_access_groups_uuid'), 'access_groups', ['uuid'], unique=False)
    op.create_table('accessions',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum(name='accessiontypeenum'), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_accessions_uuid'), 'accessions', ['uuid'], unique=False)
    op.create_table('annotations',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum(name='annotationtypeenum'), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('source', sa.Enum(name='annotationsourceenum'), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_annotations_uuid'), 'annotations', ['uuid'], unique=False)
    op.create_table('barcodes',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('barcode_offset', sa.Integer(), nullable=True),
    sa.Column('barcode_length', sa.Integer(), nullable=True),
    sa.Column('barcode_read', sa.Enum(name='barcodereadenum'), nullable=True),
    sa.Column('white_list_file', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_barcodes_uuid'), 'barcodes', ['uuid'], unique=False)
    op.create_table('biomaterial_accession_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_biomaterial_accession_join_table_uuid'), 'biomaterial_accession_join_table', ['uuid'], unique=False)
    op.create_table('biomaterial_process_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_biomaterial_process_join_table_uuid'), 'biomaterial_process_join_table', ['uuid'], unique=False)
    op.create_table('biomaterials',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ncbi_taxon_id', sa.String(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('genotype', sa.String(), nullable=True),
    sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_biomaterials_uuid'), 'biomaterials', ['uuid'], unique=False)
    op.create_table('causes_of_death',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cause_of_death', sa.String(), nullable=True),
    sa.Column('cold_perfused', sa.Boolean(), nullable=True),
    sa.Column('days_on_ventilator', sa.Integer(), nullable=True),
    sa.Column('hardy_scale', sa.Integer(), nullable=True),
    sa.Column('time_of_death', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_causes_of_death_uuid'), 'causes_of_death', ['uuid'], unique=False)
    op.create_table('cell_line_publication_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_cell_line_publication_join_table_uuid'), 'cell_line_publication_join_table', ['uuid'], unique=False)
    op.create_table('cell_morphologies',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cell_morphology', sa.String(), nullable=True),
    sa.Column('cell_size', sa.Integer(), nullable=True),
    sa.Column('percent_cell_viability', sa.Integer(), nullable=True),
    sa.Column('cell_viability_method', sa.String(), nullable=True),
    sa.Column('cell_viability_result', sa.String(), nullable=True),
    sa.Column('percent_necrosis', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_cell_morphologies_uuid'), 'cell_morphologies', ['uuid'], unique=False)
    op.create_table('cell_suspension_cell_type_ontology_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_cell_suspension_cell_type_ontology_join_table_uuid'), 'cell_suspension_cell_type_ontology_join_table', ['uuid'], unique=False)
    op.create_table('cell_type_ontologies',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_cell_type_ontologies_uuid'), 'cell_type_ontologies', ['uuid'], unique=False)
    op.create_table('cells',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('genes_detected', sa.Integer(), nullable=True),
    sa.Column('total_umis', sa.Integer(), nullable=True),
    sa.Column('empty_drops_is_cell', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_cells_uuid'), 'cells', ['uuid'], unique=False)
    op.create_table('contributors',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('lab', sa.String(), nullable=True),
    sa.Column('corresponding_contributor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_contributors_uuid'), 'contributors', ['uuid'], unique=False)
    op.create_table('dcp_base',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_dcp_base_uuid'), 'dcp_base', ['uuid'], unique=False)
    op.create_table('donor_organism_disease_ontology_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_donor_organism_disease_ontology_join_table_uuid'), 'donor_organism_disease_ontology_join_table', ['uuid'], unique=False)
    op.create_table('expressions',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('expr_type', sa.Enum(name='expressiontypeenum'), nullable=True),
    sa.Column('expr_value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_expressions_uuid'), 'expressions', ['uuid'], unique=False)
    op.create_table('familial_relationships',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_familial_relationships_uuid'), 'familial_relationships', ['uuid'], unique=False)
    op.create_table('features',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.Enum(name='featuretypeenum'), nullable=True),
    sa.Column('chromosome', sa.Integer(), nullable=True),
    sa.Column('feature_start', sa.String(), nullable=True),
    sa.Column('feature_end', sa.String(), nullable=True),
    sa.Column('is_gene', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_features_uuid'), 'features', ['uuid'], unique=False)
    op.create_table('file_ontology_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_file_ontology_join_table_uuid'), 'file_ontology_join_table', ['uuid'], unique=False)
    op.create_table('files',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('checksum', sa.String(), nullable=True),
    sa.Column('file_description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_files_uuid'), 'files', ['uuid'], unique=False)
    op.create_table('funders',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('grant_id', sa.String(), nullable=True),
    sa.Column('organization', sa.String(), nullable=True),
    sa.Column('grant_title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_funders_uuid'), 'funders', ['uuid'], unique=False)
    op.create_table('growth_conditions',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('passage_number', sa.Integer(), nullable=True),
    sa.Column('growth_medium', sa.String(), nullable=True),
    sa.Column('culture_environment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_growth_conditions_uuid'), 'growth_conditions', ['uuid'], unique=False)
    op.create_table('links',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_links_uuid'), 'links', ['uuid'], unique=False)
    op.create_table('medical_histories',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('alcohol_history', sa.String(), nullable=True),
    sa.Column('medication', sa.String(), nullable=True),
    sa.Column('smoking_history', sa.String(), nullable=True),
    sa.Column('nutritional_state', sa.Enum(name='nutritionalstateenum'), nullable=True),
    sa.Column('test_results', sa.String(), nullable=True),
    sa.Column('treatment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_medical_histories_uuid'), 'medical_histories', ['uuid'], unique=False)
    op.create_table('ontologies',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum(name='ontologytypeenum'), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('source', sa.Enum(name='ontologysourceenum'), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_ontologies_uuid'), 'ontologies', ['uuid'], unique=False)
    op.create_table('parameters',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('checksum', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_parameters_uuid'), 'parameters', ['uuid'], unique=False)
    op.create_table('plate_based_sequencing',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('plate_label', sa.String(), nullable=True),
    sa.Column('well_label', sa.String(), nullable=True),
    sa.Column('well_quality', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_plate_based_sequencing_uuid'), 'plate_based_sequencing', ['uuid'], unique=False)
    op.create_table('preservation_storage',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('storage_method', sa.Enum(name='storagemethodenum'), nullable=True),
    sa.Column('storage_time', sa.Integer(), nullable=True),
    sa.Column('preservation_method', sa.Enum(name='preservationmethodenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_preservation_storage_uuid'), 'preservation_storage', ['uuid'], unique=False)
    op.create_table('process',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('deviation_from_protocol', sa.String(), nullable=True),
    sa.Column('input_bundle', sa.String(), nullable=True),
    sa.Column('analysis_run_type', sa.Enum(name='runtypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_uuid'), 'process', ['uuid'], unique=False)
    op.create_table('process_biomaterial_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('connection_type', sa.Enum('INPUT', 'OUTPUT', 'PROTOCOL', name='processconnectiontypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_biomaterial_join_table_uuid'), 'process_biomaterial_join_table', ['uuid'], unique=False)
    op.create_table('process_cell_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('connection_type', sa.Enum('INPUT', 'OUTPUT', 'PROTOCOL', name='processconnectiontypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_cell_join_table_uuid'), 'process_cell_join_table', ['uuid'], unique=False)
    op.create_table('process_file_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('connection_type', sa.Enum('INPUT', 'OUTPUT', 'PROTOCOL', name='processconnectiontypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_file_join_table_uuid'), 'process_file_join_table', ['uuid'], unique=False)
    op.create_table('process_parameter_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_parameter_join_table_uuid'), 'process_parameter_join_table', ['uuid'], unique=False)
    op.create_table('process_protocol_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('connection_type', sa.Enum('INPUT', 'OUTPUT', 'PROTOCOL', name='processconnectiontypeenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_protocol_join_table_uuid'), 'process_protocol_join_table', ['uuid'], unique=False)
    op.create_table('process_task_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_process_task_join_table_uuid'), 'process_task_join_table', ['uuid'], unique=False)
    op.create_table('project_access_group_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_access_group_join_table_uuid'), 'project_access_group_join_table', ['uuid'], unique=False)
    op.create_table('project_accession_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_accession_join_table_uuid'), 'project_accession_join_table', ['uuid'], unique=False)
    op.create_table('project_contributor_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_contributor_join_table_uuid'), 'project_contributor_join_table', ['uuid'], unique=False)
    op.create_table('project_funder_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_funder_join_table_uuid'), 'project_funder_join_table', ['uuid'], unique=False)
    op.create_table('project_link_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_link_join_table_uuid'), 'project_link_join_table', ['uuid'], unique=False)
    op.create_table('project_publication_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_project_publication_join_table_uuid'), 'project_publication_join_table', ['uuid'], unique=False)
    op.create_table('projects',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_projects_short_name'), 'projects', ['short_name'], unique=False)
    op.create_index(op.f('ix_projects_title'), 'projects', ['title'], unique=False)
    op.create_index(op.f('ix_projects_uuid'), 'projects', ['uuid'], unique=False)
    op.create_table('protocol_reagent_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_protocol_reagent_join_table_uuid'), 'protocol_reagent_join_table', ['uuid'], unique=False)
    op.create_table('protocols',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('publication_doi', sa.String(), nullable=True),
    sa.Column('protocols_io_doi', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_protocols_uuid'), 'protocols', ['uuid'], unique=False)
    op.create_table('publication_author_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_publication_author_join_table_uuid'), 'publication_author_join_table', ['uuid'], unique=False)
    op.create_table('publications',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('doi', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_publications_uuid'), 'publications', ['uuid'], unique=False)
    op.create_table('purchased_reagents',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('retail_name', sa.String(), nullable=True),
    sa.Column('catalog_number', sa.String(), nullable=True),
    sa.Column('manufacturer', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('kit_titer', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_purchased_reagents_uuid'), 'purchased_reagents', ['uuid'], unique=False)
    op.create_table('sequence_file_accession_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_sequence_file_accession_join_table_uuid'), 'sequence_file_accession_join_table', ['uuid'], unique=False)
    op.create_table('specimen_file_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_specimen_file_join_table_uuid'), 'specimen_file_join_table', ['uuid'], unique=False)
    op.create_table('specimen_from_organism_disease_ontology_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_specimen_from_organism_disease_ontology_join_table_uuid'), 'specimen_from_organism_disease_ontology_join_table', ['uuid'], unique=False)
    op.create_table('state_of_specimens',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('autolysis_score', sa.Enum(name='autolysisscoreenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_state_of_specimens_uuid'), 'state_of_specimens', ['uuid'], unique=False)
    op.create_table('tasks',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('stop_time', sa.DateTime(), nullable=True),
    sa.Column('disk_size', sa.String(), nullable=True),
    sa.Column('docker_image', sa.String(), nullable=True),
    sa.Column('cpus', sa.Integer(), nullable=True),
    sa.Column('memory', sa.String(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.Column('log_err', sa.String(), nullable=True),
    sa.Column('log_out', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_tasks_uuid'), 'tasks', ['uuid'], unique=False)
    op.create_table('ten_x',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('fastq_method', sa.String(), nullable=True),
    sa.Column('fastq_method_version', sa.String(), nullable=True),
    sa.Column('pooled_channels', sa.Integer(), nullable=True),
    sa.Column('drop_uniformity', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_ten_x_uuid'), 'ten_x', ['uuid'], unique=False)
    op.create_table('time_courses',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('relevance', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_time_courses_uuid'), 'time_courses', ['uuid'], unique=False)
    op.create_table('user_access_group_join_table',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_access_group_join_table_uuid'), 'user_access_group_join_table', ['uuid'], unique=False)
    op.create_table('users',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('orcid_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('analysis_protocols',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('computational_method', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cell_lines',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('type', sa.Enum(name='celllinetypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['biomaterials.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cell_suspension',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('estimated_cell_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['biomaterials.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('differentiation_protocol',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('media', sa.String(), nullable=True),
    sa.Column('small_molecules', sa.String(), nullable=True),
    sa.Column('target_cell_yield', sa.Integer(), nullable=True),
    sa.Column('target_pathway', sa.String(), nullable=True),
    sa.Column('validation_method', sa.String(), nullable=True),
    sa.Column('validation_result', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('donor_organism',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('is_living', sa.Enum(name='islivingenum'), nullable=True),
    sa.Column('sex', sa.Enum(name='sexenum'), nullable=True),
    sa.Column('bmi', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['biomaterials.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrichment_protocols',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('markers', sa.String(), nullable=True),
    sa.Column('minimum_size', sa.Integer(), nullable=True),
    sa.Column('maximum_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ipsc_induction_protocols',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('reprogramming_factors', sa.String(), nullable=True),
    sa.Column('pluripotency_test', sa.String(), nullable=True),
    sa.Column('percent_pluripotency', sa.Integer(), nullable=True),
    sa.Column('pluripotency_vector_removed', sa.Enum(name='vectorremovalenum'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('library_prep_protocols',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('nucleic_acid_source', sa.Enum(name='nucleicacidsourceenum'), nullable=True),
    sa.Column('end_bias', sa.Enum(name='endbiasenum'), nullable=True),
    sa.Column('strand', sa.String(), nullable=True),
    sa.Column('primer', sa.String(), nullable=True),
    sa.Column('nominal_length', sa.Integer(), nullable=True),
    sa.Column('nominal_sdev', sa.Integer(), nullable=True),
    sa.Column('spike_in_dilution', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organoid',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['biomaterials.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequence_file',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('read_index', sa.Enum(name='readindexenum'), nullable=True),
    sa.Column('lane_index', sa.Integer(), nullable=True),
    sa.Column('read_length', sa.Integer(), nullable=True),
    sa.Column('libary_prep_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['files.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_protocols',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('paired_end', sa.Boolean(), nullable=True),
    sa.Column('local_machine_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['protocols.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specimen_from_organism',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('collection_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['biomaterials.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('specimen_from_organism')
    op.drop_table('sequencing_protocols')
    op.drop_table('sequence_file')
    op.drop_table('organoid')
    op.drop_table('library_prep_protocols')
    op.drop_table('ipsc_induction_protocols')
    op.drop_table('enrichment_protocols')
    op.drop_table('donor_organism')
    op.drop_table('differentiation_protocol')
    op.drop_table('cell_suspension')
    op.drop_table('cell_lines')
    op.drop_table('analysis_protocols')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_access_group_join_table_uuid'), table_name='user_access_group_join_table')
    op.drop_table('user_access_group_join_table')
    op.drop_index(op.f('ix_time_courses_uuid'), table_name='time_courses')
    op.drop_table('time_courses')
    op.drop_index(op.f('ix_ten_x_uuid'), table_name='ten_x')
    op.drop_table('ten_x')
    op.drop_index(op.f('ix_tasks_uuid'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_state_of_specimens_uuid'), table_name='state_of_specimens')
    op.drop_table('state_of_specimens')
    op.drop_index(op.f('ix_specimen_from_organism_disease_ontology_join_table_uuid'), table_name='specimen_from_organism_disease_ontology_join_table')
    op.drop_table('specimen_from_organism_disease_ontology_join_table')
    op.drop_index(op.f('ix_specimen_file_join_table_uuid'), table_name='specimen_file_join_table')
    op.drop_table('specimen_file_join_table')
    op.drop_index(op.f('ix_sequence_file_accession_join_table_uuid'), table_name='sequence_file_accession_join_table')
    op.drop_table('sequence_file_accession_join_table')
    op.drop_index(op.f('ix_purchased_reagents_uuid'), table_name='purchased_reagents')
    op.drop_table('purchased_reagents')
    op.drop_index(op.f('ix_publications_uuid'), table_name='publications')
    op.drop_table('publications')
    op.drop_index(op.f('ix_publication_author_join_table_uuid'), table_name='publication_author_join_table')
    op.drop_table('publication_author_join_table')
    op.drop_index(op.f('ix_protocols_uuid'), table_name='protocols')
    op.drop_table('protocols')
    op.drop_index(op.f('ix_protocol_reagent_join_table_uuid'), table_name='protocol_reagent_join_table')
    op.drop_table('protocol_reagent_join_table')
    op.drop_index(op.f('ix_projects_uuid'), table_name='projects')
    op.drop_index(op.f('ix_projects_title'), table_name='projects')
    op.drop_index(op.f('ix_projects_short_name'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_project_publication_join_table_uuid'), table_name='project_publication_join_table')
    op.drop_table('project_publication_join_table')
    op.drop_index(op.f('ix_project_link_join_table_uuid'), table_name='project_link_join_table')
    op.drop_table('project_link_join_table')
    op.drop_index(op.f('ix_project_funder_join_table_uuid'), table_name='project_funder_join_table')
    op.drop_table('project_funder_join_table')
    op.drop_index(op.f('ix_project_contributor_join_table_uuid'), table_name='project_contributor_join_table')
    op.drop_table('project_contributor_join_table')
    op.drop_index(op.f('ix_project_accession_join_table_uuid'), table_name='project_accession_join_table')
    op.drop_table('project_accession_join_table')
    op.drop_index(op.f('ix_project_access_group_join_table_uuid'), table_name='project_access_group_join_table')
    op.drop_table('project_access_group_join_table')
    op.drop_index(op.f('ix_process_task_join_table_uuid'), table_name='process_task_join_table')
    op.drop_table('process_task_join_table')
    op.drop_index(op.f('ix_process_protocol_join_table_uuid'), table_name='process_protocol_join_table')
    op.drop_table('process_protocol_join_table')
    op.drop_index(op.f('ix_process_parameter_join_table_uuid'), table_name='process_parameter_join_table')
    op.drop_table('process_parameter_join_table')
    op.drop_index(op.f('ix_process_file_join_table_uuid'), table_name='process_file_join_table')
    op.drop_table('process_file_join_table')
    op.drop_index(op.f('ix_process_cell_join_table_uuid'), table_name='process_cell_join_table')
    op.drop_table('process_cell_join_table')
    op.drop_index(op.f('ix_process_biomaterial_join_table_uuid'), table_name='process_biomaterial_join_table')
    op.drop_table('process_biomaterial_join_table')
    op.drop_index(op.f('ix_process_uuid'), table_name='process')
    op.drop_table('process')
    op.drop_index(op.f('ix_preservation_storage_uuid'), table_name='preservation_storage')
    op.drop_table('preservation_storage')
    op.drop_index(op.f('ix_plate_based_sequencing_uuid'), table_name='plate_based_sequencing')
    op.drop_table('plate_based_sequencing')
    op.drop_index(op.f('ix_parameters_uuid'), table_name='parameters')
    op.drop_table('parameters')
    op.drop_index(op.f('ix_ontologies_uuid'), table_name='ontologies')
    op.drop_table('ontologies')
    op.drop_index(op.f('ix_medical_histories_uuid'), table_name='medical_histories')
    op.drop_table('medical_histories')
    op.drop_index(op.f('ix_links_uuid'), table_name='links')
    op.drop_table('links')
    op.drop_index(op.f('ix_growth_conditions_uuid'), table_name='growth_conditions')
    op.drop_table('growth_conditions')
    op.drop_index(op.f('ix_funders_uuid'), table_name='funders')
    op.drop_table('funders')
    op.drop_index(op.f('ix_files_uuid'), table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('ix_file_ontology_join_table_uuid'), table_name='file_ontology_join_table')
    op.drop_table('file_ontology_join_table')
    op.drop_index(op.f('ix_features_uuid'), table_name='features')
    op.drop_table('features')
    op.drop_index(op.f('ix_familial_relationships_uuid'), table_name='familial_relationships')
    op.drop_table('familial_relationships')
    op.drop_index(op.f('ix_expressions_uuid'), table_name='expressions')
    op.drop_table('expressions')
    op.drop_index(op.f('ix_donor_organism_disease_ontology_join_table_uuid'), table_name='donor_organism_disease_ontology_join_table')
    op.drop_table('donor_organism_disease_ontology_join_table')
    op.drop_index(op.f('ix_dcp_base_uuid'), table_name='dcp_base')
    op.drop_table('dcp_base')
    op.drop_index(op.f('ix_contributors_uuid'), table_name='contributors')
    op.drop_table('contributors')
    op.drop_index(op.f('ix_cells_uuid'), table_name='cells')
    op.drop_table('cells')
    op.drop_index(op.f('ix_cell_type_ontologies_uuid'), table_name='cell_type_ontologies')
    op.drop_table('cell_type_ontologies')
    op.drop_index(op.f('ix_cell_suspension_cell_type_ontology_join_table_uuid'), table_name='cell_suspension_cell_type_ontology_join_table')
    op.drop_table('cell_suspension_cell_type_ontology_join_table')
    op.drop_index(op.f('ix_cell_morphologies_uuid'), table_name='cell_morphologies')
    op.drop_table('cell_morphologies')
    op.drop_index(op.f('ix_cell_line_publication_join_table_uuid'), table_name='cell_line_publication_join_table')
    op.drop_table('cell_line_publication_join_table')
    op.drop_index(op.f('ix_causes_of_death_uuid'), table_name='causes_of_death')
    op.drop_table('causes_of_death')
    op.drop_index(op.f('ix_biomaterials_uuid'), table_name='biomaterials')
    op.drop_table('biomaterials')
    op.drop_index(op.f('ix_biomaterial_process_join_table_uuid'), table_name='biomaterial_process_join_table')
    op.drop_table('biomaterial_process_join_table')
    op.drop_index(op.f('ix_biomaterial_accession_join_table_uuid'), table_name='biomaterial_accession_join_table')
    op.drop_table('biomaterial_accession_join_table')
    op.drop_index(op.f('ix_barcodes_uuid'), table_name='barcodes')
    op.drop_table('barcodes')
    op.drop_index(op.f('ix_annotations_uuid'), table_name='annotations')
    op.drop_table('annotations')
    op.drop_index(op.f('ix_accessions_uuid'), table_name='accessions')
    op.drop_table('accessions')
    op.drop_index(op.f('ix_access_groups_uuid'), table_name='access_groups')
    op.drop_table('access_groups')
    # ### end Alembic commands ###
